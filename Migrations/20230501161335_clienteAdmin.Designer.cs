// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto_Mobile_Sustentabilidade.Data.Context;

#nullable disable

namespace ProjetoMobileSustentabilidade.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230501161335_clienteAdmin")]
    partial class clienteAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.DonoPosto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("DonosPosto");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.FuncionarioPosto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdDonoPosto")
                        .HasColumnType("int");

                    b.Property<int>("IdPosto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdDonoPosto");

                    b.HasIndex("IdPosto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("FuncionariosPosto");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Liquido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAdministrador")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdAdministrador");

                    b.ToTable("Liquidos");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Posto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdAdministrador")
                        .HasColumnType("int");

                    b.Property<int>("IdDonoPosto")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdAdministrador");

                    b.HasIndex("IdDonoPosto");

                    b.ToTable("Postos");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.PostoAceitaLiquido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeOcupada")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadeTotal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLiquido")
                        .HasColumnType("int");

                    b.Property<int>("IdPosto")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdLiquido");

                    b.HasIndex("IdPosto");

                    b.ToTable("PostosAceitamLiquido");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.TransacaoPosto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataAgendada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdFuncionarioPosto")
                        .HasColumnType("int");

                    b.Property<int>("IdLiquido")
                        .HasColumnType("int");

                    b.Property<int>("QtdAgendada")
                        .HasColumnType("int");

                    b.Property<int?>("QtdConfirmada")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdFuncionarioPosto");

                    b.HasIndex("IdLiquido");

                    b.ToTable("TransacoesPosto");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.TransacaoUsina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionarioPosto")
                        .HasColumnType("int");

                    b.Property<int>("IdLiquido")
                        .HasColumnType("int");

                    b.Property<int>("IdUsina")
                        .HasColumnType("int");

                    b.Property<int>("Qtd")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdFuncionarioPosto");

                    b.HasIndex("IdLiquido");

                    b.HasIndex("IdUsina");

                    b.ToTable("TransacoesUsina");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Usina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAdministrador")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdAdministrador");

                    b.ToTable("Usinas");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPFouCNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("PerfilEnum")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusEnum")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Administrador", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Cliente", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.DonoPosto", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.FuncionarioPosto", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.DonoPosto", "DonoPosto")
                        .WithMany()
                        .HasForeignKey("IdDonoPosto")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Posto", "Posto")
                        .WithMany()
                        .HasForeignKey("IdPosto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DonoPosto");

                    b.Navigation("Posto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Liquido", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Administrador", "Administrador")
                        .WithMany()
                        .HasForeignKey("IdAdministrador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Posto", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Administrador", "Administrador")
                        .WithMany()
                        .HasForeignKey("IdAdministrador")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.DonoPosto", "DonoPosto")
                        .WithMany()
                        .HasForeignKey("IdDonoPosto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("DonoPosto");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.PostoAceitaLiquido", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Liquido", "Liquido")
                        .WithMany()
                        .HasForeignKey("IdLiquido")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Posto", "Posto")
                        .WithMany()
                        .HasForeignKey("IdPosto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Liquido");

                    b.Navigation("Posto");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.TransacaoPosto", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.FuncionarioPosto", "FuncionarioPosto")
                        .WithMany()
                        .HasForeignKey("IdFuncionarioPosto")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Liquido", "Liquido")
                        .WithMany()
                        .HasForeignKey("IdLiquido")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("FuncionarioPosto");

                    b.Navigation("Liquido");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.TransacaoUsina", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.FuncionarioPosto", "FuncionarioPosto")
                        .WithMany()
                        .HasForeignKey("IdFuncionarioPosto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Liquido", "Liquido")
                        .WithMany()
                        .HasForeignKey("IdLiquido")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Usina", "Usina")
                        .WithMany()
                        .HasForeignKey("IdUsina")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FuncionarioPosto");

                    b.Navigation("Liquido");

                    b.Navigation("Usina");
                });

            modelBuilder.Entity("Projeto_Mobile_Sustentabilidade.Data.Models.Usina", b =>
                {
                    b.HasOne("Projeto_Mobile_Sustentabilidade.Data.Models.Administrador", "Administrador")
                        .WithMany()
                        .HasForeignKey("IdAdministrador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Administrador");
                });
#pragma warning restore 612, 618
        }
    }
}
